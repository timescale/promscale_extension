name: ci
on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres:
        - version: "14"
        - version: "13"
        - version: "12"
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_BUCKET: promscale-extension-sccache
      AWS_ACCESS_KEY_ID: ${{ secrets.PROMSCALE_EXTENSION_SCCACHE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PROMSCALE_EXTENSION_SCCACHE_AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Install rust
        uses: dtolnay/rust-toolchain@1.64.0

      - name: Setup sccache
        run: |
          curl -L "https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz" | tar zxf -
          chmod +x sccache-*/sccache
          sudo mv sccache-*/sccache /usr/local/bin/sccache
          sccache --show-stats

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.postgres.version }}
          cache-targets: "false"

      - name: Install cargo-pgx
        run: |
          ./install-cargo-pgx.sh

      - name: Cache pgx
        id: cache-pgx
        uses: actions/cache@v3
        with:
          path: ~/.pgx
          key: dot-pgx-${{ matrix.postgres.version }}-cargo-${{ hashFiles('**/Cargo.*') }}

      - name: Initialize pgx
        if: ${{ steps.cache-pgx.outputs.cache-hit != 'true' }}
        run: cargo pgx init --pg${{ matrix.postgres.version }} download

      - name: Run cargo test
        run: cargo pgx test pg${{ matrix.postgres.version }}

      # Note: pgx puts the postgres test configuration data in target/pgx-test-data-<pg_ver>
      # Swatinem/rust-cache "cleans" and then caches this directory. This
      # "cleaning" breaks pgx when the cache is restored. By removing the
      # directory, we prevent it from being incorrectly cached.
      - name: Remove pgx-test-data directory
        run: |
          rm -rf target/pgx-test-data*

      - name: Show sccache stats
        run: sccache --show-stats
