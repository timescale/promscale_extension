name: ci
on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres:
        - version: "14"
        - version: "13"
        - version: "12"
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_BUCKET: promscale-extension-sccache
      AWS_ACCESS_KEY_ID: ${{ secrets.PROMSCALE_EXTENSION_SCCACHE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PROMSCALE_EXTENSION_SCCACHE_AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Setup sccache
        run: |
          curl -L "https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz" | tar zxf -
          chmod +x sccache-*/sccache
          sudo mv sccache-*/sccache /usr/local/bin/sccache
          sccache --show-stats

      - uses: Swatinem/rust-cache@v1

      - name: Install cargo-pgx
        run: |
          ./install-cargo-pgx.sh

      - name: Cache pgx
        id: cache-pgx
        uses: actions/cache@v2
        with:
          path: ~/.pgx
          key: dot-pgx-${{ matrix.postgres.version }}-cargo-${{ hashFiles('**/Cargo.*') }}

      - name: Initialize pgx
        if: ${{ steps.cache-pgx.outputs.cache-hit != 'true' }}
        uses: actions-rs/cargo@v1
        with:
          command: pgx
          args: init --pg${{ matrix.postgres.version }} download
      
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: pgx
          args: test pg${{ matrix.postgres.version }}

      - name: Show sccache stats
        run: sccache --show-stats

