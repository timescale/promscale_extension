name: docker
on:
  pull_request:
    paths-ignore:
    - '.github/workflows/ci.yaml'
    - '.github/workflows/lint.yaml'
    - '.github/workflows/release.yaml'
    - 'dist/*'
    - 'tools/*'
  push:
    branches:
      - develop
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pgversion:
        - 14
        - 13
        - 12
        tsversion:
        - 2.6.0
        base:
        - ha
        - alpine
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Gather metadata
        id: metadata
        run: |
          tsmajor=$(echo ${{matrix.tsversion}} | cut -d. -f1)
          branch_name=$(echo ${{github.head_ref || github.ref_name}} | sed 's#/#-#')
          build_type_suffix=$(echo "-${{matrix.base}}" | sed 's/-ha//')
          echo "::set-output name=tsmajor::${tsmajor}"
          echo "::set-output name=branch_name::${branch_name}"
          echo "::set-output name=build_type_suffix::${build_type_suffix}"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PG_VER=pg${{ matrix.pgversion }}
            TIMESCALEDB_VER=${{ matrix.tsversion }}
          context: .
          file: ${{matrix.base}}.Dockerfile
          push: true
          tags: ghcr.io/timescale/dev_promscale_extension:${{steps.metadata.outputs.branch_name}}-ts${{steps.metadata.outputs.tsmajor}}-pg${{matrix.pgversion}}${{steps.metadata.outputs.build_type_suffix}}
          # Note: it's necessary to use a different cache scope to achieve caching for both Ubuntu and Alpine images
          cache-from: type=gha,scope=${{matrix.base}}
          cache-to: type=gha,mode=max,scope=${{matrix.base}}
